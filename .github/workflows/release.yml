name: Release

on:
  release:
    types:
      - created

jobs:
  release:
    if: github.event.release.target_commitish == 'main'

    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - name: Linux-x86_64
            platform: 'ubuntu-latest' # for Tauri v1 you could replace this with ubuntu-20.04.
            target: x86_64-unknown-linux-gnu

          - name: macOS-Apple
            platform: 'macos-latest' # for Arm based macs (M1 and above).
            target: aarch64-apple-darwin

          - name: macOS-Intel
            platform: 'macos-latest' # for Intel based macs.
            target: x86_64-apple-darwin

          - name: Windows-x86_64
            platform: 'windows-latest'
            target: x86_64-pc-windows-msvc

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        # If you want to use the tray icon you need to install "libappindicator3-dev"
        run: |
          sudo apt update
          sudo apt -y upgrade
          sudo apt install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm ci

      - name: Build the app
        uses: tauri-apps/tauri-action@dev

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: 'v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
          args: --target ${{ matrix.target }}

      - name: Build Portable Binaries (Windows)
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          cd src-tauri
          cargo build --release --target ${{ matrix.target }}
          Move-Item "./target/${{ matrix.target }}/release/Keira4.exe" "./target/${{ matrix.target }}/release/Keira4_${{ github.ref_name }}_x64-portable.exe"

      - name: Upload Portable Binaries (Windows)
        if: ${{ matrix.platform == 'windows-latest' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          cd src-tauri
          Get-ChildItem -Force ./target/x86_64-pc-windows-msvc
          Get-ChildItem -Force ./target/release
          bash -c 'gh release upload ${{ github.ref_name }} ./target/${{ matrix.target }}/release/Keira4_${{ github.ref_name }}_x64-portable.exe --clobber'
